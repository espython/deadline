[
  {
    "model": "challenges.challengecategory",
    "pk": "Algorithms",
    "fields": {}
  },

  {
    "model": "challenges.challengecategory",
    "pk": "Data Structures",
    "fields": {}
  },

  {
    "model": "challenges.challengecategory",
    "pk": "Python Language",
    "fields": {}
  },

  {
    "model": "challenges.subcategory",
    "pk": "Introduction",
    "fields": {
      "meta_category": "Python Language"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Collections",
    "fields": {
      "meta_category": "Python Language"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Closures and Decorators",
    "fields": {
      "meta_category": "Python Language"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Itertools",
    "fields": {
      "meta_category": "Python Language"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Array",
    "fields": {
      "meta_category": "Data Structures"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Linked List",
    "fields": {
      "meta_category": "Data Structures"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Trees",
    "fields": {
      "meta_category": "Data Structures"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Disjoint Set",
    "fields": {
      "meta_category": "Data Structures"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Recursion",
    "fields": {
      "meta_category": "Algorithms"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Sorting",
    "fields": {
      "meta_category": "Algorithms"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Greedy",
    "fields": {
      "meta_category": "Algorithms"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Strings",
    "fields": {
      "meta_category": "Algorithms"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Graphs",
    "fields": {
      "meta_category": "Algorithms"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Dynamic Programming",
    "fields": {
      "meta_category": "Algorithms"
    }
  },

  {
    "model": "challenges.subcategory",
    "pk": "Miscellaneous",
    "fields": {
      "meta_category": "Algorithms"
    }
  },
  {
    "model": "challenges.challengedescription",
    "pk": 1,
    "fields": {
      "content": "Write a program that prints `Hello World` to the console!",
      "input_format": "",
      "output_format": "The string \"Hello World\" on a single line.",
      "constraints": "",
      "sample_input": "",
      "sample_output": "",
      "explanation": ""
    }
  },
  {
    "model": "challenges.challenge",
    "pk": 1,
    "fields": {
      "name": "Say Hello World!",
      "description": 1,
      "rating": 1,
      "score": 10,
      "test_file_name": "hello_tests",
      "test_case_count": 1,
      "category": "Miscellaneous"
    }
  },
  {
    "model": "challenges.challengedescription",
    "pk": 2,
    "fields": {
      "content": "While studying for her university, FMI, Rositsa came up with the idea of a basic number.\n\nA basic number was the following: a positive number, which when represented in base **b** would have every prefix with **k** count digits(from 1 to the count of digits in the number to the given base) converted to base **b** be divisible by **k**.\n\nExample:\nUsing base 2\n1 is a basic number since its prefix of length 1 (prefix=1) is divisible by 1\n2 is a basic number. 2 in base 2 is 10, its prefix of length 1 is 1, which is divisible by 1 and its prefix of length 2 is 10, which is divisible by 2.\n3, on the other hand, is not a basic number. Converted to base 2, 3 is equal to 11. Its prefix of length 1(prefix=1) is divisible by 1, but its prefix of length 2(prefix=11) is not divisible by 2.\n\nRositsa wants you to find the count of basic numbers represented in the given base **b**, which are exactly **d** digits long (when converted to the base).",
      "input_format": "First line of the input denotes the number of test cases.\nFor each test case there is a single line containing two integers, the base **b** and digits **d**, separated by a single space.",
      "output_format": "A number on a single line",
      "constraints": "1<=Test case count<=100\n2<=Base<=4\n1<=Digits<=10^7",
      "sample_input": "\n1\n3 2",
      "sample_output": "1",
      "explanation": "There are exactly 6 numbers that have 2 digits converted to base 3 and they are [3, 4, 5, 6, 7, 8](in base 3 [10, 11, 12, 20, 21, 22]) Only numbers 4(11), 6(20) and 8(22) are basic numbers. 4 is a basic number, because his prefix of length 1(prefix=1, converted to base 3=1) is divisible by 1 and its prefix of length 2(prefix=11, converted to base3=4) is divisible by 2."
    }
  },
  {
    "model": "challenges.challenge",
    "pk": 2,
    "fields": {
      "name": "Basic Numbers",
      "description": 2,
      "rating": 35,
      "score": 40,
      "test_file_name": "basic_numbers_tests",
      "test_case_count": 8,
      "category": "Dynamic Programming"
    }
  },

    {
    "model": "challenges.challengedescription",
    "pk": 3,
    "fields": {
      "content": "Given an a list of *N* numbers, find their sum",
      "input_format": "One line, containing the numbers, separated by a comma and whitespace",
      "output_format": "A number on a single line, the sum of the numbers",
      "constraints": "1<=Number<=100000\n1<=N<=1000",
      "sample_input": "1, 2, 3",
      "sample_output": "6",
      "explanation": "1 + 2 + 3 = 6"
    }
  },

  {
    "model": "challenges.challenge",
    "pk": 3,
    "fields": {
      "name": "Array Sum",
      "description": 3,
      "rating": 5,
      "score": 10,
      "test_file_name": "array_sum_tests",
      "test_case_count": 7,
      "category": "Miscellaneous"
    }
  },

  {
    "model": "challenges.challengedescription",
    "pk": 4,
    "fields": {
      "content": "Given a sequence of numbers, find the smallest and biggest number in said sequence.",
      "input_format": "One line, containing the numbers, separated by a comma and whitespace",
      "output_format": "The smallest and biggest number printed on a single line, separated by a comma",
      "constraints": "1<=Number<=100000\n1<=N<=1000",
      "sample_input": "10, 12, -1",
      "sample_output": "-1, 12",
      "explanation": ""
    }
  },

  {
    "model": "challenges.challenge",
    "pk": 4,
    "fields": {
      "name": "Array Amplitude",
      "description": 4,
      "rating": 7,
      "score": 10,
      "test_file_name": "array_amplitude_tests",
      "test_case_count": 7,
      "category": "Miscellaneous"
    }
  }
]