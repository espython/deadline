from grader import *


@test_cases([(2, ('2 2', '1'), ('4 120', '0')),
             (5, ('4 7', '1'), ('3 4', '3'), ('3 2', '3'), ('3 5', '2'), ('2 3', '0')),
             (100, ('3 2019758', '0'),('4 3', '8'),('3 7373577', '0'),('4 3190956', '0'),('3 8484291', '0'),('3 9', '0'),('2 6', '0'),('4 10', '0'),('2 3', '0'),('4 2', '6'),('4 1', '3'),('2 5', '0'),('3 9187237', '0'),('3 9267510', '0'),('3 2', '3'),('3 8976905', '0'),('2 10', '0'),('3 7', '0'),('4 7', '1'),('3 1', '2'),('4 6', '4'),('2 476309', '0'),('3 7', '0'),('3 2310317', '0'),('2 4', '0'),('2 2', '1'),('3 8144749', '0'),('2 1', '1'),('4 1458037', '0'),('3 4', '3'),('4 1391739', '0'),('3 8', '0'),('4 4', '8'),('3 9132118', '0'),('3 2', '3'),('4 4238888', '0'),('3 8776142', '0'),('2 10', '0'),('3 2', '3'),('3 8', '0'),('4 5', '7'),('2 9619748', '0'),('3 9', '0'),('2 5', '0'),('2 10', '0'),('3 2', '3'),('3 7103836', '0'),('3 6', '2'),('2 9101039', '0'),('2 7', '0'),('4 8', '0'),('3 9', '0'),('2 10', '0'),('3 9801796', '0'),('4 3018253', '0'),('3 6781238', '0'),('2 5', '0'),('3 3', '3'),('2 1648323', '0'),('4 7320081', '0'),('3 6', '2'),('4 3', '8'),('4 7326438', '0'),('4 3', '8'),('3 8364929', '0'),('4 1', '3'),('3 83830', '0'),('4 8', '0'),('2 7821085', '0'),('4 3', '8'),('3 7', '0'),('4 4', '8'),('2 7', '0'),('3 6537875', '0'),('2 3439033', '0'),('3 4', '3'),('4 3', '8'),('4 9714071', '0'),('4 5', '7'),('4 8903742', '0'),('4 5269641', '0'),('3 4301401', '0'),('4 4819616', '0'),('4 1562305', '0'),('4 3', '8'),('2 4277892', '0'),('3 7', '0'),('4 4488899', '0'),('3 7', '0'),('3 2', '3'),('4 4869096', '0'),('4 7', '1'),('2 6', '0'),('2 2931188', '0'),('2 2012039', '0'),('4 2933835', '0'),('3 6', '2'),('4 8', '0'),('4 8', '0'),('4 9', '0')),
             (12,('3 2', '3'),('3 9', '0'),('4 1', '3'),('2 2', '1'),('4 3', '8'),('4 5', '7'),('4 10', '0'),('2 6', '0'),('4 6', '4'),('2 7', '0'),('2 7', '0'),('4 6', '4')),
             (5,('4 2', '6'),('2 8', '0'),('3 3', '3'),('3 9', '0'),('2 3', '0')),
             (7,('4 5', '7'),('2 3', '0'),('3 4', '3'),('2 9', '0'),('4 4', '8'),('4 7', '1'),('4 1', '3')),
             (6,('4 2', '6'),('3 10', '0'),('4 8', '0'),('4 3', '8'),('4 3', '8'),('3 2', '3')),
             (3,('4 1', '3'),('4 9', '0'),('2 1', '1'))
             ], description='Test case count: {}')
def search(m, test_case_count, *input_args):
    m.stdin.put(test_case_count)

    for input_output in input_args:
        input, output = input_output

        m.stdin.put(input)
        given_output = m.stdout.new().strip()

        assert output == given_output, "{} is not equal to {}".format(output, given_output)
